CREATE TABLE public.sales
(
    transaction_id integer PRIMARY KEY,
    transactional_date timestamp,
    product_id character varying,
    customer_id integer,
    payment character varying,
    credit_card bigint,
    loyalty_card character varying,
    cost character varying,
    quantity integer,
    price numeric
);

SELECT * FROM public.sales LIMIT 5;

CREATE SCHEMA IF NOT EXISTS staging;
CREATE SCHEMA IF NOT EXISTS core;

CREATE TABLE staging.sales
(
    transaction_id integer PRIMARY KEY,
    transactional_date timestamp,
    product_id character varying,
    customer_id integer,
    payment character varying,
    credit_card bigint,
    loyalty_card character varying,
    cost numeric,
    quantity integer,
    price numeric
);

CREATE TABLE core.sales
(
    transaction_id integer PRIMARY KEY,
    transactional_date timestamp,
    transactional_date_fk bigint,
    product_id character varying,
    product_fk integer,
    customer_id integer,
    payment_fk integer,
    credit_card bigint,
    cost numeric,
    quantity integer,
    price numeric,
    total_cost numeric,
    total_price numeric,
    profit numeric
);

CREATE TABLE core.dim_product (
    product_pk integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id character varying UNIQUE
);

CREATE TABLE core.dim_payment
(
    payment_pk integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    payment character varying,
    loyalty_card character varying,
    PRIMARY KEY (payment_pk)
);


SELECT * FROM "Staging".sales LIMIT 5;
SELECT * FROM core.dim_payment;
SELECT * FROM core.sales LIMIT 5;

INSERT INTO core.dim_product (product_id)
SELECT DISTINCT product_id FROM public.sales;

SELECT * FROM core.dim_product;

SELECT * FROM core.sales WHERE transactional_date >= '2022-05-01' LIMIT 5;